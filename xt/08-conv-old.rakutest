#
# Checking the conversions with older 0.0.x modules
#

use v6.d;
use Test;
use lib '../version-old/lib';
use lib 'lib';
use Date::Calendar::Strftime:api<1>;
use Date::Calendar::Aztec;
use Date::Calendar::Aztec::Cortes;
use Date::Calendar::Bahai;
use Date::Calendar::Bahai::Astronomical;
use Date::Calendar::Coptic;
use Date::Calendar::Ethiopic;
use Date::Calendar::Hebrew;
use Date::Calendar::Hijri;
use Date::Calendar::Gregorian;
use Date::Calendar::FrenchRevolutionary;
use Date::Calendar::FrenchRevolutionary::Arithmetic;
use Date::Calendar::FrenchRevolutionary::Astronomical;
use Date::Calendar::Julian;
use Date::Calendar::Julian::AUC;
use Date::Calendar::Maya;
use Date::Calendar::Maya::Astronomical;
use Date::Calendar::Maya::Spinden;
use Date::Calendar::Persian;
use Date::Calendar::Persian::Astronomical;

my @data-greg = (
       (181, 13, 11, after-sunset,   'gr', "Wednesday 13 Nov 2024"       , "Ida 10 Qud 0181 ☼", "2024-11-13 shift to previous day", '2024-11-13')
     , (181, 13, 11, before-sunrise, 'gr', "Thursday 14 Nov 2024"        , "Isj 11 Qud 0181 ☼", "2024-11-14 shift to daylight"    , '2024-11-14')
     , (181, 13, 11, daylight,       'gr', "Thursday 14 Nov 2024"        , "Isj 11 Qud 0181 ☼", "2024-11-14 no problem"           , '2024-11-14')
            );

my @data-maya = (
       (181, 19,  3, after-sunset,   'm0', "14 Kayab 9 Chuen"           , "Isj 02 Ayy 0181 ☼", "2025-02-27 shift to the previous date, wrong clerical date, should be 14 Kayab 10 Eb")
     , (181, 19,  3, before-sunrise, 'm0', "15 Kayab 10 Eb"             , "Isq 03 Ayy 0181 ☼", "2025-02-28 wrong intermediate date, should be 14 Kayab 10 Eb")
     , (181, 19,  3, daylight,       'm0', "15 Kayab 10 Eb"             , "Isq 03 Ayy 0181 ☼", "2025-02-28 no problem")
     , (181,  7,  4, after-sunset,   'm1', " 5 Xul 1 Ik"                , "Kam 03 Kal 0181 ☼", "2024-07-15 shift to the previous date, wrong clerical date, should be  5 Xul 2 Akbal")
     , (181,  7,  4, before-sunrise, 'm1', " 6 Xul 2 Akbal"             , "Fid 04 Kal 0181 ☼", "2024-07-16 wrong intermediate date, should be  5 Xul 2 Akbal")
     , (181,  7,  4, daylight,       'm1', " 6 Xul 2 Akbal"             , "Fid 04 Kal 0181 ☼", "2024-07-16 no problem")
     , (180, 13, 14, after-sunset,   'm2', " 9 Ceh 7 Imix"              , "Isj 13 Qud 0180 ☼", "2023-11-16 shift to the previous date, wrong clerical date, should be  9 Ceh 8 Ik")
     , (180, 13, 14, before-sunrise, 'm2', "10 Ceh 8 Ik"                , "Isq 14 Qud 0180 ☼", "2023-11-17 wrong intermediate date, should be  9 Ceh 8 Ik")
     , (180, 13, 14, daylight,       'm2', "10 Ceh 8 Ik"                , "Isq 14 Qud 0180 ☼", "2023-11-17 no problem")
     , (179, 16,  5, after-sunset,   'a0', "12 Huei Tozoztli 3 Coatl"   , "Fid 04 Sha 0179 ☼", "2023-01-03 shift to the previous date, wrong clerical date, should be 12 Huei Tozoztli 4 Miquiztli")
     , (179, 16,  5, before-sunrise, 'a0', "13 Huei Tozoztli 4 Miquiztli", "Ida 05 Sha 0179 ☼", "2023-01-04 wrong intermediate date, should be 12 Huei Tozoztli 4 Miquiztli")
     , (179, 16,  5, daylight,       'a0', "13 Huei Tozoztli 4 Miquiztli", "Ida 05 Sha 0179 ☼", "2023-01-04 no problem")
     , (178, 15, 14, after-sunset,   'a1', " 5 Huei Tozoztli 8 Acatl"   , "Isq 13 Mal 0178 ☼", "2021-12-24 shift to the previous date, wrong clerical date, should be  5 Huei Tozoztli 9 Ocelotl")
     , (178, 15, 14, before-sunrise, 'a1', " 6 Huei Tozoztli 9 Ocelotl" , "Jal 14 Mal 0178 ☼", "2021-12-25 wrong intermediate date, should be  5 Huei Tozoztli 9 Ocelotl")
     , (178, 15, 14, daylight,       'a1', " 6 Huei Tozoztli 9 Ocelotl" , "Jal 14 Mal 0178 ☼", "2021-12-25 no problem")
            );

my @data-others = (
       (181, 15, 12, after-sunset,   'co', "Tkyriakē 13 Kia 1741"        , "Jam 11 Mal 0181 ☼", "2024-12-22 shift to previous day")
     , (181, 15, 12, before-sunrise, 'co', "Pesnau 14 Kia 1741"          , "Kam 12 Mal 0181 ☼", "2024-12-23 shift to daylight")
     , (181, 15, 12, daylight,       'co', "Pesnau 14 Kia 1741"          , "Kam 12 Mal 0181 ☼", "2024-12-23 no problem")
     , (181, 11, 16, after-sunset,   'et', "Qedame 01 Teq 2017"          , "Isq 15 Mat 0181 ☼", "2024-10-11 shift to previous day")
     , (181, 11, 16, before-sunrise, 'et', "Ehud 02 Teq 2017"            , "Jal 16 Mat 0181 ☼", "2024-10-12 shift to daylight")
     , (181, 11, 16, daylight,       'et', "Ehud 02 Teq 2017"            , "Jal 16 Mat 0181 ☼", "2024-10-12 no problem")
     , (179,  3,  8, after-sunset,   'fr', "Quintidi 15 Flo 0230"        , "Ida 07 Jam 0179 ☼", "2022-05-04 shift to previous day")
     , (179,  3,  8, before-sunrise, 'fr', "Sextidi 16 Flo 0230"         , "Isj 08 Jam 0179 ☼", "2022-05-05 shift to daylight")
     , (179,  3,  8, daylight,       'fr', "Sextidi 16 Flo 0230"         , "Isj 08 Jam 0179 ☼", "2022-05-05 no problem")
     , (181, 17,  7, after-sunset,   'fa', "Quintidi 05 Plu 0233"        , "Isq 06 Sul 0181 ☼", "2025-01-24 shift to previous day")
     , (181, 17,  7, before-sunrise, 'fa', "Sextidi 06 Plu 0233"         , "Jal 07 Sul 0181 ☼", "2025-01-25 shift to daylight")
     , (181, 17,  7, daylight,       'fa', "Sextidi 06 Plu 0233"         , "Jal 07 Sul 0181 ☼", "2025-01-25 no problem")
     , (178,  4, 18, after-sunset,   'fe', "Quartidi 14 Pra 0229"        , "Ida 17 Aza 0178 ☼", "2021-06-02 shift to previous day")
     , (178,  4, 18, before-sunrise, 'fe', "Quintidi 15 Pra 0229"        , "Isj 18 Aza 0178 ☼", "2021-06-03 shift to daylight")
     , (178,  4, 18, daylight,       'fe', "Quintidi 15 Pra 0229"        , "Isj 18 Aza 0178 ☼", "2021-06-03 no problem")
     , (179, 14, 17, after-sunset,   'he', "Yom Chamishi 14 Kis 5783"    , "Isj 16 Qaw 0179 ☼", "2022-12-08 shift to previous day")
     , (179, 14, 17, before-sunrise, 'he', "Yom Shishi 15 Kis 5783"      , "Isq 17 Qaw 0179 ☼", "2022-12-09 shift to daylight")
     , (179, 14, 17, daylight,       'he', "Yom Shishi 15 Kis 5783"      , "Isq 17 Qaw 0179 ☼", "2022-12-09 no problem")
     , (179, 12, 15, after-sunset,   'hi', "Yaum al-Sabt 03 R.T 1444"    , "Jal 14 Ilm 0179 ☼", "2022-10-29 shift to previous day")
     , (179, 12, 15, before-sunrise, 'hi', "Yaum al-Ahad 04 R.T 1444"    , "Jam 15 Ilm 0179 ☼", "2022-10-30 shift to daylight")
     , (179, 12, 15, daylight,       'hi', "Yaum al-Ahad 04 R.T 1444"    , "Jam 15 Ilm 0179 ☼", "2022-10-30 no problem")
     , (180,  6, 14, after-sunset,   'jl', "Thursday 23 Jun 2023"        , "Isj 13 Rah 0180 ☼", "2023-07-06 shift to previous day")
     , (180,  6, 14, before-sunrise, 'jl', "Friday 24 Jun 2023"          , "Isq 14 Rah 0180 ☼", "2023-07-07 shift to daylight")
     , (180,  6, 14, daylight,       'jl', "Friday 24 Jun 2023"          , "Isq 14 Rah 0180 ☼", "2023-07-07 no problem")
     , (181, 18, 18, after-sunset,   'jc', "Sunday 10 Feb 2778"          , "Jam 17 Mul 0181 ☼", "2025-02-23 shift to previous day")
     , (181, 18, 18, before-sunrise, 'jc', "Monday 11 Feb 2778"          , "Kam 18 Mul 0181 ☼", "2025-02-24 shift to daylight")
     , (181, 18, 18, daylight,       'jc', "Monday 11 Feb 2778"          , "Kam 18 Mul 0181 ☼", "2025-02-24 no problem")
     , (179, 16,  9, after-sunset,   'pe', "Shanbe 17 Dei 1401"          , "Jal 08 Sha 0179 ☼", "2023-01-07 shift to previous day")
     , (179, 16,  9, before-sunrise, 'pe', "Yek-shanbe 18 Dei 1401"      , "Jam 09 Sha 0179 ☼", "2023-01-08 shift to daylight")
     , (179, 16,  9, daylight,       'pe', "Yek-shanbe 18 Dei 1401"      , "Jam 09 Sha 0179 ☼", "2023-01-08 no problem")
     , (181, 13, 17, after-sunset,   'pa', "Se shanbe 29 Aba 1403"       , "Fid 16 Qud 0181 ☼", "2024-11-19 shift to previous day")
     , (181, 13, 17, before-sunrise, 'pa', "Chahar shanbe 30 Aba 1403"   , "Ida 17 Qud 0181 ☼", "2024-11-20 shift to daylight")
     , (181, 13, 17, daylight,       'pa', "Chahar shanbe 30 Aba 1403"   , "Ida 17 Qud 0181 ☼", "2024-11-20 no problem")
            );

my %class =   a0 => 'Date::Calendar::Aztec'
            , a1 => 'Date::Calendar::Aztec::Cortes'
            , ba => 'Date::Calendar::Bahai'
            , be => 'Date::Calendar::Bahai::Astronomical'
            , gr => 'Date::Calendar::Gregorian'
            , co => 'Date::Calendar::Coptic'
            , et => 'Date::Calendar::Ethiopic'
            , fr => 'Date::Calendar::FrenchRevolutionary'
            , fa => 'Date::Calendar::FrenchRevolutionary::Arithmetic'
            , fe => 'Date::Calendar::FrenchRevolutionary::Astronomical'
            , he => 'Date::Calendar::Hebrew'
            , hi => 'Date::Calendar::Hijri'
            , jl => 'Date::Calendar::Julian'
            , jc => 'Date::Calendar::Julian::AUC'
            , m0 => 'Date::Calendar::Maya'
            , m1 => 'Date::Calendar::Maya::Astronomical'
            , m2 => 'Date::Calendar::Maya::Spinden'
            , pe => 'Date::Calendar::Persian'
            , pa => 'Date::Calendar::Persian::Astronomical'
            ;

my %ver   =   a0 => '0.0.3'
            , a1 => '0.0.3'
            , ba => '0.0.2'
            , pe => '0.0.2'
            , be => '0.0.2'
            , co => '0.0.3'
            , et => '0.0.3'
            , fr => '0.0.6'
            , fa => '0.0.6'
            , fe => '0.0.6'
            , gr => '0.0.2'
            , he => '0.0.4'
            , hi => '0.0.2'
            , jl => '0.0.4'
            , jc => '0.0.4'
            , m0 => '0.0.3'
            , m1 => '0.0.3'
            , m2 => '0.0.3'
            , pe => '0.0.2'
            , pa => '0.0.2'
            ;

plan 15 × @data-greg.elems + 12 × @data-others.elems + 12 × @data-maya.elems;

for (|@data-greg, |@data-others) -> $datum {
  my ($year, $month, $day, $daypart, $cal, $str2, $str3, $result) = $datum;
  my Date::Calendar::Bahai $d1 .= new(year => $year, month => $month, day => $day, daypart => $daypart);

  # push-push
  my $d2 = $d1.to-date(%class{$cal});
  is($d2.strftime("%A %d %b %Y"), $str2, "testing push to $str2");
  is($d2.^ver, %ver{$cal});
  my $d3 = $d2.to-date(%class<ba>);
  is($d3.strftime("%a %d %b %Y %Ep"), $str3, "testing push-push to $str2 and $str3, $result");
  is($d3.^ver.Str.substr(0, 4), '0.1.');

  # push-pull
  my Date::Calendar::Bahai $d4 .= new-from-date($d2);
  is($d4.strftime("%a %d %b %Y %Ep"), $str3, "testing push-pull to $str2 and $str3, $result");
  is($d4.^ver.Str.substr(0, 4), '0.1.');

  # pull-push
  my $d5 = ::(%class{$cal}).new-from-date($d1);
  is($d5.strftime("%A %d %b %Y"), $str2, "testing pull to $str2");
  is($d5.^ver, %ver{$cal});
  my $d6 = $d5.to-date(%class<ba>);
  is($d6.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-push to $str2 and $str3, $result");
  is($d6.^ver.Str.substr(0, 4), '0.1.');

  # pull-pull
  my Date::Calendar::Bahai $d7 .= new-from-date($d5);
  is($d7.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-pull to $str2 and $str3, $result");
  is($d7.^ver.Str.substr(0, 4), '0.1.');
}

for (@data-maya) -> $datum {
  my ($year, $month, $day, $daypart, $cal, $str2, $str3, $result) = $datum;
  my Date::Calendar::Bahai $d1 .= new(year => $year, month => $month, day => $day, daypart => $daypart);
  my Str $str1 = $d1.strftime("%a %d %b %Y %Ep");

  # push-push
  my $d2 = $d1.to-date(%class{$cal});
  is($d2.strftime("%e %B %V %A"), $str2, "testing push to $str2");
  is($d2.^ver, %ver{$cal});
  my $d3 = $d2.to-date(%class<ba>);
  is($d3.strftime("%a %d %b %Y %Ep"), $str3, "testing push-push $str1 to $str2 and $str3, $result");
  is($d3.^ver.Str.substr(0, 4), '0.1.');

  # push-pull
  my Date::Calendar::Bahai $d4 .= new-from-date($d2);
  is($d4.strftime("%a %d %b %Y %Ep"), $str3, "testing push-pull $str1 to $str2 and $str3, $result");
  is($d4.^ver.Str.substr(0, 4), '0.1.');

  # pull-push
  my $d5 = ::(%class{$cal}).new-from-date($d1);
  is($d5.strftime("%e %B %V %A"), $str2, "testing pull to $str2");
  is($d5.^ver, %ver{$cal});
  my $d6 = $d5.to-date(%class<ba>);
  is($d6.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-push $str1 to $str2 and $str3, $result");
  is($d6.^ver.Str.substr(0, 4), '0.1.');

  # pull-pull
  my Date::Calendar::Bahai $d7 .= new-from-date($d5);
  is($d7.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-pull $str1 to $str2 and $str3, $result");
  is($d7.^ver.Str.substr(0, 4), '0.1.');
}

# Conversion with core class Date: only push-pull tests
for (@data-greg) -> $datum {
  my ($year, $month, $day, $daypart, $cal, $str2, $str3, $result, $str4) = $datum;
  my Date::Calendar::Bahai $d1 .= new(year => $year, month => $month, day => $day, daypart => $daypart);

  my $d2 = $d1.to-date('Date');
  is($d2.gist, $str4, "testing push from $year-$month-$day to $str4");
  my Date::Calendar::Bahai $d3 .= new-from-date($d2);
  is($d3.strftime("%a %d %b %Y %Ep"), $str3, "testing push-pull from $year-$month-$day to Gregorian $str4 and then $str3, $result");
  is($d3.^ver.Str.substr(0, 4), '0.1.');
}

done-testing;
